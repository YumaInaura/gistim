#!/usr/bin/env ruby

require 'pry'
require 'gistim'
subcommand = ARGV[0]

# TODO: Use Ruby OptionParser

if ARGV.include? '--version'
  puts Gistim::VERSION
  exit
end

if subcommand == 'help'
  puts <<~HELP
    $ gistim create some_word
    
    Crete new gist and git clone
  HELP
elsif subcommand == 'clone'
  Gistim::Clone.clone(ARGV[1], clone_directory: ARGV[2])
elsif subcommand == 'clone'
  Gistim::Clone.clone(ARGV[1], clone_directory: ARGV[2])
elsif subcommand == 'create'
  create = Gistim::Create.new(alias_name: ARGV[1]).implement
  puts "directory: #{create.directory}"
elsif ['list', 'history'].include? subcommand
  require 'json'

  list = `gist --list`

  history_file_path = "#{Gistim::Command.home}/gist-history.txt"
  File.write(history_file_path, list)
  results = File.read(history_file_path).split("\n").map do |line|
    [
      ["url", line.split(/\s/)[0]],
      ["description", line.split(/\s/)[1..-1].join]
     ].to_h
  end
  # FIXME: escape backslash
  puts JSON.pretty_generate(results, quirks_mode: true)
elsif ['open'].include? subcommand
  `open $(echo https://gist.github.com/$(git config user.username)/$(git remote -v | head -n 1 | awk '{ print $2 }' | awk -F':' '{ print $2 }'))`
else
  puts <<~TEXT
    =====================================
      $ gistim command delegated to $ gist command
    =====================================
  TEXT
  puts `gist #{ARGV.join(' ')}`
end

